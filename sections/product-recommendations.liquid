<div class="page-width">
    <div
    class="product-recommendations py-6"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=8" x-data="Slider"
    >
    {%- if recommendations.performed and recommendations.products_count > 0 -%}
        <h2 class="uppercase text-2xl tracking-[2.5px] font-bold text-center">Tambi√©n te puede interesar</h2>

        <div class="flex justify-end py-4">
            <button class="p-2" @click="prev">
                {% render 'icon-arrow', class: 'w-8 rotate-180' %}
            </button>
            <button class="p-2" @click="next">
                {% render 'icon-arrow', class: 'w-8' %}
            </button>
        </div>

        <ul class="flex overflow-x-scroll gap-3 snap-x snap-mandatory" x-ref="slider">
            {%- for recommendation in recommendations.products -%}
            <li class="product flex-shrink-0 w-[280px] border border-gray-900 snap-start">
                <a href="{{ recommendation.url }}">
                    <div class="card w-full">
                        <div class="w-full relative">
                            <img
                            class="product__img"
                            src="{{ recommendation.featured_image | image_url: width: 300 }}"
                            alt="{{ recommendation.featured_image.alt }}"
                            loading="lazy"
                            width="100%"
                            />
                        </div>
                        <div class="py-4 px-4">
                            {% render 'shipping-color-snippet', tags: recommendation.tags, size: 'text-[10px]', product_id: recommendation.selected_or_first_available_variant.id %}
                            <p class="uppercase tracking-[1.5px] text-sm mb-2">{{ recommendation.title }}</p>
                            
                            {% if recommendation.price < recommendation.compare_at_price_max %}
                            <div class="flex gap-4 items-center">
                                <p class="text-xl tracking-[1.5px] font-bold">{{ recommendation.price | money}}</p>
                                <s class="text-xs">{{ recommendation.compare_at_price_max | money }}</s>       
                            </div>
                            {% else %}
                            <div class="flex">
                                <p class="text-xl tracking-[1.5px] font-bold">{{ recommendation.price | money}}</p>   
                            </div>    
                            {% endif %}     
                        </div>
                    </div>
                </a>
            </li>
            {%- endfor -%}
        </ul>
    {%- endif -%}
    </div>
</div>


{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});

  observer.observe(productRecommendationsSection);
{% endjavascript %}

{% schema %}
  {
    "name": "Product recommendations",
    "settings": []
  }
{% endschema %}
