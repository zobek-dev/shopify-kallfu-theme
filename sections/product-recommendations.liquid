<div class="page-width">
    <div
    class="product-recommendations py-6 mb-10"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=8" x-data="Slider"
    >
    {%- if recommendations.performed and recommendations.products_count > 0 -%}
        <h2 class="uppercase text-2xl tracking-[2.5px] font-bold text-center">Tambi√©n te puede interesar</h2>

        <div class="flex justify-end mb-4">
            <button class="p-2" @click="prev">
                {% render 'icon-arrow', class: 'w-8 rotate-180' %}
            </button>
            <button class="p-2" @click="next">
                {% render 'icon-arrow', class: 'w-8' %} 
            </button>
        </div>

        <ul class="flex overflow-x-scroll gap-3 snap-x snap-mandatory" x-ref="slider" id="Recommendations">
            {%- for recommendation in recommendations.products -%}
            <li class="product flex-shrink-0 w-[280px] border border-gray-900 snap-start">
               {% render 'card-product', card_product: recommendation %}
            </li>
            {%- endfor -%}
        </ul>
    {%- endif -%}
    </div>
</div>


{% javascript %}
  const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;

    observer.unobserve(productRecommendationsSection);

    const url = productRecommendationsSection.dataset.url;

    fetch(url)
      .then(response => response.text())
      .then(text => {
        const html = document.createElement('div');
        html.innerHTML = text;
        const recommendations = html.querySelector('.product-recommendations');

        if (recommendations && recommendations.innerHTML.trim().length) {
          productRecommendationsSection.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(e => {
        console.error(e);
      });
  };

  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});
  console.log(observer)
  observer.observe(productRecommendationsSection);
{% endjavascript %}

{% schema %}
  {
    "name": "Product recommendations",
    "settings": []
  }
{% endschema %}
